{"version":3,"sources":["components/GetFace.js","components/Joke.js","components/JokeList.js","App.js","registerServiceWorker.js","index.js"],"names":["GetFace","props","author","this","getFace","className","href","src","alt","Component","Joke","source","text","includes","target","getSource","JokeList","handleClick","bind","state","quotes","JSON","parse","window","localStorage","getItem","length","fetchQuotes","a","numJokesToGet","axios","get","res","push","data","body","quotesource","votes","id","uuidv4","console","log","setState","st","setItem","stringify","delta","map","j","onClick","upvote","handleVote","downvote","defaultProps","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ffc68059.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass GetFace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const author = this.props.author\r\n        function getFace(author) {\r\n            switch (author) {\r\n                case \"Marcus Aurelius\":\r\n                    return [\"https://en.wikipedia.org/wiki/Marcus_Aurelius\", \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Marcus_Aurelius_Louvre_MR561_n02.jpg/164px-Marcus_Aurelius_Louvre_MR561_n02.jpg\"]\r\n                    break;\r\n\r\n                case \"Seneca\":\r\n                    return [\"https://en.wikipedia.org/wiki/Seneca_the_Younger\", \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/0_S%C3%A9n%C3%A8que_-_Mus%C3%A9e_du_Prado_-_Cat._144_-_%282%29.JPG/170px-0_S%C3%A9n%C3%A8que_-_Mus%C3%A9e_du_Prado_-_Cat._144_-_%282%29.JPG\"]\r\n\r\n                    break;\r\n                case \"Epictetus\":\r\n                    return [\"https://en.wikipedia.org/wiki/Epictetus\", \"https://3quarksdaily.com/wp-content/uploads/2019/04/Crito-1a-259x360.jpg\"]\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"face\">\r\n                <a href={getFace(author)[0]}>\r\n                    <img src={getFace(author)[1]} alt={author} />\r\n                </a>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default GetFace;","import React, { Component } from 'react';\r\nimport './Joke.css';\r\nimport GetFace from './GetFace';\r\n\r\nexport default class Joke extends Component {\r\n    render() {\r\n        const source = this.props.source\r\n        const getSource = source =>\r\n            source.includes(\"Meditations\") ? <a href=\"http://classics.mit.edu/Antoninus/meditations.mb.txt\" target=\"_blank\">Mediations</a> : this.props.source\r\n\r\n        return (\r\n            <div className=\"Joke\">\r\n                <GetFace source = {this.props.source} author = {this.props.author}/>\r\n                {/* <div className=\"Joke-buttons\">\r\n                    <i className=\"fas fa-arrow-up\" onClick={this.props.upvote}></i>\r\n                    <span className=\"Joke-votes\">{this.props.votes}</span>\r\n                    <i className=\"fas fa-arrow-down\" onClick={this.props.downvote}></i>\r\n                </div> */}\r\n                <div className=\"Joke-text\">\r\n                    <p></p>{this.props.text}\r\n                    <br/>\r\n\r\n                    <span>{this.props.author},<br></br> {getSource(source)}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Joke from './Joke';\r\nimport \"./JokeList.css\";\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class JokeList extends Component {\r\n    static defaultProps = {\r\n        numJokesToGet: 10\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.state = {\r\n            quotes: JSON.parse(window.localStorage.getItem(\"quotes\") || \"[]\")\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.quotes.length === 0) this.fetchQuotes();\r\n    }\r\n\r\n    async fetchQuotes() {\r\n        let quotes = [];\r\n        while (quotes.length < this.props.numJokesToGet) {\r\n            let res = await axios.get(\"https://stoic-server.herokuapp.com/random\");\r\n            // console.log(res)\r\n            quotes.push({ text: res.data[\"0\"].body, author: res.data[0].author, source: res.data[0].quotesource, votes: 0, id: uuidv4() });\r\n        }\r\n        console.log(quotes);\r\n        this.setState(\r\n            st => ({\r\n                quotes: [...st.quotes, ...quotes]\r\n            }),\r\n            () => window.localStorage.setItem(\"quotes\", JSON.stringify(this.state.quotes))\r\n        );\r\n    }\r\n\r\n    handleVote(id, delta) {\r\n        this.setState(\r\n            st => ({\r\n                quotes: st.quotes.map(j =>\r\n                    j.id === id ? { ...j, votes: j.votes + delta } : j\r\n                )\r\n            }), () => window.localStorage.setItem(\"quotes\", JSON.stringify(this.state.quotes))\r\n\r\n        );\r\n    }\r\n    handleClick() {\r\n        this.fetchQuotes();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"JokeList\">\r\n                <div className=\"JokeList-sidebar\">\r\n                    <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Paolo_Monti_-_Servizio_fotografico_%28Napoli%2C_1969%29_-_BEIC_6353768.jpg/551px-Paolo_Monti_-_Servizio_fotografico_%28Napoli%2C_1969%29_-_BEIC_6353768.jpg' />\r\n                        <h5 className=\"JokeList-title\">Stoic<span>Companion</span></h5>\r\n                        <button className=\"getmore\" onClick={this.handleClick}>More Quotes</button>\r\n                        {/* <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTRU6ZSTPKlIUtGlPVpPlu4oKJT5ae-ycI0WA&usqp=CAU' /> */}\r\n                </div>\r\n                <div className=\"JokeList-jokes\">\r\n                    {this.state.quotes.map(j => (\r\n                        <Joke\r\n                            key={j.id}\r\n                            votes={j.votes}\r\n                            text={j.text}\r\n                            author={j.author}\r\n                            source={j.source}\r\n                            upvote={() => this.handleVote(j.id, 1)}\r\n                            downvote={() => this.handleVote(j.id, -1)}\r\n                        />\r\n                    ))};\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport JokeList from \"./components/JokeList\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <JokeList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}